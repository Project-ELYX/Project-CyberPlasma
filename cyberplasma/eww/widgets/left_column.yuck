;; Left column widget with system gauges, network metrics, and top processes

;; System gauges
(defpoll cores :interval "3600s" :command "nproc --all")
(defpoll cpu :interval "1s" :command "../scripts/cpu.sh" :json true)
(defpoll ram :interval "5s" :command "../scripts/ram.sh" :json true)
(defpoll temp :interval "5s" :command "../scripts/temp.sh | jq '{temp: (.[keys[0]])}'" :json true)

;; Network rates using dynamically detected interface
(defpoll net :interval "2s" :command "../scripts/net.sh $(../scripts/default_iface.sh)" :json true)

;; Top processes
(defpoll top_procs :interval "10s" :command "../scripts/top_procs.sh" :json true)

(defwidget left_column []
  (box :class "left-column" :orientation "v" :spacing 8 :vexpand true
      ;; Gauges
       (box :id "bar-matrix" :orientation "h" :spacing 2
            (for i (range 0 cores)
                 (progress :orientation "v" :vexpand true :max 100
                           :value (nth cpu.cores i)
                           :class (format "cpu-bar %s"
                                          (if (> (nth cpu.cores i) 95)
                                              "cp-err"
                                              (if (> (nth cpu.cores i) 80)
                                                  "cp-warn"
                                                  "cp-accent"))))))
       (box :id "ram-matrix" :orientation "v" :spacing 1
            (for r (range 0 10)
                 (box :orientation "h" :spacing 1
                      (for c (range 0 24)
                           (box :width 10 :height 10
                                :class (if (< (+ (* r 24) c) ram.used_dots)
                                             (if (>= (+ (* r 24) c) 216)
                                                 "ram-dot cp-err"
                                                 (if (>= (+ (* r 24) c) 192)
                                                     "ram-dot cp-warn"
                                                     "ram-dot cp-accent"))
                                             "ram-dot")))))
       (progress :class "temp" :value temp.temp :max 100)
       ;; Network metrics
       (box :class "net" :spacing 4
            (label :class "net-rx" :text "Rx ${net.rx_kBps} kB/s")
            (label :class "net-tx" :text "Tx ${net.tx_kBps} kB/s"))
       ;; Top processes by CPU
       (box :class "procs" :orientation "v"
            (for proc top_procs
                 (label :class "proc" :text "${proc.cmd} ${proc.cpu}%")))))
