;; Left column widget with system gauges, network metrics, and top processes

;; System gauges
(defpoll cpu :interval "1s" :command "../scripts/cpu.sh" :json true)
(defpoll ram :interval "5s" :command "../scripts/ram.sh" :json true)
(defpoll temp :interval "5s" :command "../scripts/temp.sh | jq '{temp: (.[keys[0]])}'" :json true)

;; Network rates using dynamically detected interface
(defpoll net :interval "2s" :command "../scripts/net.sh $(../scripts/default_iface.sh)" :json true)

;; Top processes
(defpoll top_procs :interval "10s" :command "../scripts/top_procs.sh" :json true)

(defwidget left_column []
  (box :class "left-column" :orientation "v" :spacing 8 :vexpand true
       ;; Gauges
       (progress :class "cpu cp-accent" :value cpu.usage :max 100)
       (progress :class "ram cp-accent" :value ram.percent :max 100)
       (progress :class "temp cp-accent" :value temp.temp :max 100)
       ;; Network metrics
       (box :class "net" :spacing 4
            (label :class "net-rx cp-text" :text "Rx ${net.rx_kBps} kB/s")
            (label :class "net-tx cp-text" :text "Tx ${net.tx_kBps} kB/s"))
       ;; Top processes by CPU
       (box :class "procs" :orientation "v"
            (for proc top_procs
                 (label :class "proc cp-text" :text "${proc.cmd} ${proc.cpu}%")))))
